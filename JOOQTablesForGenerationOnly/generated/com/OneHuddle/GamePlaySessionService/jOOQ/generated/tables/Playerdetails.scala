/*
 * This file is generated by jOOQ.
*/
package com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables


import com.OneHuddle.GamePlaySessionService.jOOQ.generated.Indexes
import com.OneHuddle.GamePlaySessionService.jOOQ.generated.Keys
import com.OneHuddle.GamePlaySessionService.jOOQ.generated.Onehuddle
import com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables.records.PlayerdetailsRecord

import java.lang.Class
import java.lang.String
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Index
import org.jooq.Name
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.TableImpl

import scala.Array


object Playerdetails {

  /**
   * The reference instance of <code>OneHuddle.PlayerDetails</code>
   */
  val PLAYERDETAILS = new Playerdetails
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.0"
  ),
  comments = "This class is generated by jOOQ"
)
class Playerdetails(alias : Name, aliased : Table[PlayerdetailsRecord], parameters : Array[ Field[_] ]) extends TableImpl[PlayerdetailsRecord](alias, Onehuddle.ONEHUDDLE, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[PlayerdetailsRecord] = {
    classOf[PlayerdetailsRecord]
  }

  /**
   * The column <code>OneHuddle.PlayerDetails.companyID</code>.
   */
  val COMPANYID : TableField[PlayerdetailsRecord, String] = createField("companyID", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.companyName</code>.
   */
  val COMPANYNAME : TableField[PlayerdetailsRecord, String] = createField("companyName", org.jooq.impl.SQLDataType.VARCHAR(32), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.belongsToDepartment</code>.
   */
  val BELONGSTODEPARTMENT : TableField[PlayerdetailsRecord, String] = createField("belongsToDepartment", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.playerID</code>.
   */
  val PLAYERID : TableField[PlayerdetailsRecord, String] = createField("playerID", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.playerName</code>.
   */
  val PLAYERNAME : TableField[PlayerdetailsRecord, String] = createField("playerName", org.jooq.impl.SQLDataType.VARCHAR(32), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.playerEMailID</code>.
   */
  val PLAYEREMAILID : TableField[PlayerdetailsRecord, String] = createField("playerEMailID", org.jooq.impl.SQLDataType.VARCHAR(32), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.applicableTimeZone</code>.
   */
  val APPLICABLETIMEZONE : TableField[PlayerdetailsRecord, String] = createField("applicableTimeZone", org.jooq.impl.SQLDataType.VARCHAR(16), "")

  /**
   * The column <code>OneHuddle.PlayerDetails.belongsToGroup</code>.
   */
  val BELONGSTOGROUP : TableField[PlayerdetailsRecord, String] = createField("belongsToGroup", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * Create a <code>OneHuddle.PlayerDetails</code> table reference
   */
  def this() = {
    this(DSL.name("PlayerDetails"), null, null)
  }

  /**
   * Create an aliased <code>OneHuddle.PlayerDetails</code> table reference
   */
  def this(alias : String) = {
    this(DSL.name(alias), com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables.Playerdetails.PLAYERDETAILS, null)
  }

  /**
   * Create an aliased <code>OneHuddle.PlayerDetails</code> table reference
   */
  def this(alias : Name) = {
    this(alias, com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables.Playerdetails.PLAYERDETAILS, null)
  }

  private def this(alias : Name, aliased : Table[PlayerdetailsRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = Onehuddle.ONEHUDDLE

  override def getIndexes : List[ Index ] = {
    return Arrays.asList[ Index ](Indexes.PLAYERDETAILS_PRIMARY)
  }

  override def getPrimaryKey : UniqueKey[PlayerdetailsRecord] = {
    Keys.KEY_PLAYERDETAILS_PRIMARY
  }

  override def getKeys : List[ UniqueKey[PlayerdetailsRecord] ] = {
    return Arrays.asList[ UniqueKey[PlayerdetailsRecord] ](Keys.KEY_PLAYERDETAILS_PRIMARY)
  }

  override def as(alias : String) : Playerdetails = {
    new Playerdetails(DSL.name(alias), this)
  }

  override def as(alias : Name) : Playerdetails = {
    new Playerdetails(alias, this)
  }

  /**
   * Rename this table
   */
  override def rename(name : String) : Playerdetails = {
    new Playerdetails(DSL.name(name), null)
  }

  /**
   * Rename this table
   */
  override def rename(name : Name) : Playerdetails = {
    new Playerdetails(name, null)
  }
}
