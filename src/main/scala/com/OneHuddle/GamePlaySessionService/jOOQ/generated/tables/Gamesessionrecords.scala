/*
 * This file is generated by jOOQ.
*/
package com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables


import com.OneHuddle.GamePlaySessionService.jOOQ.generated.Indexes
import com.OneHuddle.GamePlaySessionService.jOOQ.generated.Keys
import com.OneHuddle.GamePlaySessionService.jOOQ.generated.Onehuddle
import com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables.records.GamesessionrecordsRecord

import java.lang.Class
import java.lang.Integer
import java.lang.String
import java.sql.Timestamp
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Index
import org.jooq.Name
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.TableImpl

import scala.Array


object Gamesessionrecords {

  /**
   * The reference instance of <code>OneHuddle.GameSessionRecords</code>
   */
  val GAMESESSIONRECORDS = new Gamesessionrecords
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.10.0"
  ),
  comments = "This class is generated by jOOQ"
)
class Gamesessionrecords(alias : Name, aliased : Table[GamesessionrecordsRecord], parameters : Array[ Field[_] ]) extends TableImpl[GamesessionrecordsRecord](alias, Onehuddle.ONEHUDDLE, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[GamesessionrecordsRecord] = {
    classOf[GamesessionrecordsRecord]
  }

  /**
   * The column <code>OneHuddle.GameSessionRecords.companyID</code>.
   */
  val COMPANYID : TableField[GamesessionrecordsRecord, String] = createField("companyID", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.belongsToDepartment</code>.
   */
  val BELONGSTODEPARTMENT : TableField[GamesessionrecordsRecord, String] = createField("belongsToDepartment", org.jooq.impl.SQLDataType.VARCHAR(28).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.playerID</code>.
   */
  val PLAYERID : TableField[GamesessionrecordsRecord, String] = createField("playerID", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.gameID</code>.
   */
  val GAMEID : TableField[GamesessionrecordsRecord, String] = createField("gameID", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.gameSessionUUID</code>.
   */
  val GAMESESSIONUUID : TableField[GamesessionrecordsRecord, String] = createField("gameSessionUUID", org.jooq.impl.SQLDataType.VARCHAR(48).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.belongsToGroup</code>.
   */
  val BELONGSTOGROUP : TableField[GamesessionrecordsRecord, String] = createField("belongsToGroup", org.jooq.impl.SQLDataType.VARCHAR(28).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.gameType</code>.
   */
  val GAMETYPE : TableField[GamesessionrecordsRecord, String] = createField("gameType", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.gameName</code>.
   */
  val GAMENAME : TableField[GamesessionrecordsRecord, String] = createField("gameName", org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.startedAtInUTC</code>.
   */
  val STARTEDATINUTC : TableField[GamesessionrecordsRecord, Timestamp] = createField("startedAtInUTC", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.finishedAtInUTC</code>.
   */
  val FINISHEDATINUTC : TableField[GamesessionrecordsRecord, Timestamp] = createField("finishedAtInUTC", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.timezoneApplicable</code>.
   */
  val TIMEZONEAPPLICABLE : TableField[GamesessionrecordsRecord, String] = createField("timezoneApplicable", org.jooq.impl.SQLDataType.VARCHAR(16).defaultValue(org.jooq.impl.DSL.field("NOTSET", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.endReason</code>.
   */
  val ENDREASON : TableField[GamesessionrecordsRecord, String] = createField("endReason", org.jooq.impl.SQLDataType.VARCHAR(32), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.score</code>.
   */
  val SCORE : TableField[GamesessionrecordsRecord, Integer] = createField("score", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("-1", org.jooq.impl.SQLDataType.INTEGER)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.timeTaken</code>.
   */
  val TIMETAKEN : TableField[GamesessionrecordsRecord, Integer] = createField("timeTaken", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("-1", org.jooq.impl.SQLDataType.INTEGER)), "")

  /**
   * The column <code>OneHuddle.GameSessionRecords.outcomeInMPGameSession</code>.
   */
  val OUTCOMEINMPGAMESESSION : TableField[GamesessionrecordsRecord, String] = createField("outcomeInMPGameSession", org.jooq.impl.SQLDataType.VARCHAR(16).nullable(false).defaultValue(org.jooq.impl.DSL.field("NOTAPPLICABLE", org.jooq.impl.SQLDataType.VARCHAR)), "")

  /**
   * Create a <code>OneHuddle.GameSessionRecords</code> table reference
   */
  def this() = {
    this(DSL.name("GameSessionRecords"), null, null)
  }

  /**
   * Create an aliased <code>OneHuddle.GameSessionRecords</code> table reference
   */
  def this(alias : String) = {
    this(DSL.name(alias), com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables.Gamesessionrecords.GAMESESSIONRECORDS, null)
  }

  /**
   * Create an aliased <code>OneHuddle.GameSessionRecords</code> table reference
   */
  def this(alias : Name) = {
    this(alias, com.OneHuddle.GamePlaySessionService.jOOQ.generated.tables.Gamesessionrecords.GAMESESSIONRECORDS, null)
  }

  private def this(alias : Name, aliased : Table[GamesessionrecordsRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = Onehuddle.ONEHUDDLE

  override def getIndexes : List[ Index ] = {
    return Arrays.asList[ Index ](Indexes.GAMESESSIONRECORDS_PRIMARY)
  }

  override def getPrimaryKey : UniqueKey[GamesessionrecordsRecord] = {
    Keys.KEY_GAMESESSIONRECORDS_PRIMARY
  }

  override def getKeys : List[ UniqueKey[GamesessionrecordsRecord] ] = {
    return Arrays.asList[ UniqueKey[GamesessionrecordsRecord] ](Keys.KEY_GAMESESSIONRECORDS_PRIMARY)
  }

  override def as(alias : String) : Gamesessionrecords = {
    new Gamesessionrecords(DSL.name(alias), this)
  }

  override def as(alias : Name) : Gamesessionrecords = {
    new Gamesessionrecords(alias, this)
  }

  /**
   * Rename this table
   */
  override def rename(name : String) : Gamesessionrecords = {
    new Gamesessionrecords(DSL.name(name), null)
  }

  /**
   * Rename this table
   */
  override def rename(name : Name) : Gamesessionrecords = {
    new Gamesessionrecords(name, null)
  }
}
