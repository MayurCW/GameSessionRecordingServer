
GameSession {

  redisEndPoint {

    host = "localhost"
    port = 6379
  }

  availableAt {

    host = "localhost"
    port = 9090
  }

  maxGameSessionLifetime {

    // Unit is expressed in seconds
    duration = 20
  }

  maxResponseTimeLimit {
    // Every request to GameSessionRecordingService is handled internally, by passing messages and
    // delegating responsibilities to actors. Each of these actors represents a GameSession. A request
    // delegated to such an actor, should not take more than the duration specified here.
    // This is an internally used value: should be increased only after due analysis.
    // Unit is expressed in seconds
    duration = 3
  }

  externalServices {

    // HTTP endpoints, which want to be informed when a GameSession is finished
    completionSubscribers = ["http://httpbin.org/put"]
  }

}

akka {
  # event-handlers = ["akka.event.slf4j.Slf4jEventHandler"]
  // loggers = ["akka.event.slf4j.Slf4jLogger"]
  // logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
  // loggers =  ["akka.testkit.TestEventListener"] //["akka.event.Logging$DefaultLogger"]
  loglevel = "DEBUG"
  dbAccessURL = "jdbc:mariadb://localhost:3306/OneHuddle?user=nuovo&password=nuovo123"
}

akka.actor.debug.receive = true
akka.actor.debug.fsm     = true
